{"version":3,"sources":["twitchApi/api.js","twitchApi/Games.js","twitchApi/Lol.js","twitchApi/Nav.js","twitchApi/GameStreams.js","twitchApi/twitch.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","headers","Authorization","Games","useState","games","setGames","Meta","Card","useEffect","a","get","res","dataArr","data","map","game","newURL","box_art_url","replace","fetchData","justify","sm","md","className","gutter","index","to","pathname","name","state","gameID","id","hoverable","cover","alt","src","title","Lol","location","match","streamData","setstreamData","setviewers","result","finalArr","stream","thumbnail_url","totalViewers","reduce","acc","val","viewer_count","href","user_name","target","rel","description","Navbar","mode","Item","icon","GameStreams","viewers","console","log","params","Twitch","Nav","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11a8233c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet api = axios.create({\n  headers: {\n    \"Client-ID\": \"adkzl3wqv7xz49nbdys08syfvwjf19\",\n    Authorization: \"Bearer t8ks86n53nauaa2onukzm6ktq3im7q\"\n  }\n});\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"./api\";\nimport { Card, Row, Col, BackTop } from \"antd\";\n\nfunction Games() {\n  const [games, setGames] = useState([]);\n  const { Meta } = Card;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await api.get(\n        \"https://api.twitch.tv/helix/games/top?first=100\"\n      );\n      //   console.log(res.data.data);\n      let dataArr = res.data.data.map(game => {\n        let newURL = game.box_art_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        game.box_art_url = newURL;\n        return game;\n      });\n\n      setGames(dataArr);\n    };\n    fetchData();\n  }, []);\n\n  const Games = () => {\n    return (\n      <Row justify=\"center\">\n        <Col sm={24} md={20} className=\"container\">\n          <Row\n            className=\"row \"\n            justify=\"center\"\n            gutter={(16, { sm: 16, md: 24 })}\n          >\n            {games.map((game, index) => (\n              <Col md={6} sm={9} className=\"col\" key={index}>\n                <Link\n                  className=\"link\"\n                  to={{\n                    pathname: \"game/\" + game.name,\n                    state: {\n                      gameID: game.id\n                    }\n                  }}\n                >\n                  <Card\n                    hoverable=\"true\"\n                    cover={<img alt=\"example\" src={game.box_art_url} />}\n                  >\n                    <Meta title={game.name}></Meta>\n                  </Card>\n                </Link>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n        <BackTop />\n      </Row>\n    );\n  };\n\n  return <Games />;\n}\n\nexport default Games;\n// to={{\n//   path: \"game/\",\n//   name: `${game.name}`,\n//   state: {\n//     gameID: game.id\n//   }\n// }}\n","import React, { useState, useEffect } from \"react\";\nimport api from \"./api\";\nimport { Card, Row, Col } from \"antd\";\nfunction Lol({ location, match }) {\n  const [streamData, setstreamData] = useState([]);\n  const [viewers, setviewers] = useState(0);\n  const { Meta } = Card;\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?first=18&game_id=21779`\n      );\n      let dataArr = result.data.data;\n      let finalArr = dataArr.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"360\")\n          .replace(\"{height}\", \"240\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n\n      let totalViewers = finalArr.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      setviewers(totalViewers);\n      setstreamData(finalArr);\n    };\n    fetchData();\n  }, []);\n  return (\n    <Row justify=\"center\">\n      <Col sm={24} md={20} className=\"container\">\n        <Row className=\"row\" justify=\"center\" gutter={(16, { sm: 16, md: 24 })}>\n          {streamData.map((stream, index) => (\n            <Col md={6} sm={9} className=\"col\" key={index}>\n              <a\n                className=\"link\"\n                href={\"http://twitch.tv/\" + stream.user_name}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <Card\n                  hoverable=\"true\"\n                  cover={<img alt=\"example\" src={stream.thumbnail_url} />}\n                >\n                  <Meta\n                    title={stream.user_name}\n                    description={stream.viewer_count + \"live viewer\"}\n                  ></Meta>\n                </Card>\n              </a>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Lol;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"antd\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nconst Navbar = () => (\n  <Menu className=\"nav\" mode=\"horizontal\">\n    <Menu.Item icon={<AiOutlineHome />} className=\"nav_item\">\n      <Link to=\"/\" replace>\n        Hot games\n      </Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to=\"/lol\" replace className=\"nav_item\">\n        Lol\n      </Link>\n    </Menu.Item>\n    {/* <div>\n      <Link to=\"/\">Hot games</Link>\n    </div>\n    <div>\n      <Link to=\"/lol\">Lol</Link>\n    </div> */}\n  </Menu>\n);\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"./api\";\nimport { Card, Row, Col } from \"antd\";\nfunction GameStreams({ location, match }) {\n  const [streamData, setstreamData] = useState([]);\n  const [viewers, setviewers] = useState(0);\n  const { Meta } = Card;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(location);\n      console.log(match);\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\n      );\n      let dataArr = result.data.data;\n      let finalArr = dataArr.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"360\")\n          .replace(\"{height}\", \"240\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n\n      let totalViewers = finalArr.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      setviewers(totalViewers);\n      setstreamData(finalArr);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>{match.params.id} Streams</h1>\n      <h3>\n        <strong>{viewers}</strong> people watching{match.params.id}\n      </h3>\n      <Row justify=\"center\">\n        <Col sm={24} md={20} className=\"container\">\n          <Row\n            className=\"row\"\n            justify=\"center\"\n            gutter={(16, { sm: 16, md: 24 })}\n          >\n            {streamData.map((stream, index) => (\n              <Col md={6} sm={9} className=\"col\" key={index}>\n                <a\n                  className=\"link\"\n                  href={\"http://twitch.tv/\" + stream.user_name}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <Card\n                    hoverable=\"true\"\n                    cover={<img alt=\"example\" src={stream.thumbnail_url} />}\n                  >\n                    <Meta\n                      title={stream.user_name}\n                      description={stream.viewer_count + \"live viewer\"}\n                    ></Meta>\n                  </Card>\n                </a>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default GameStreams;\n","import React from \"react\"; //HashRouter//BrowserRouter\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\n\nimport Games from \"./Games\";\nimport Lol from \"./Lol\";\nimport \"./twitch.css\";\nimport Navbar from \"./Nav\";\nimport GameStreams from \"./GameStreams\";\n\nfunction Twitch() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Games} />\n          <Route path=\"/lol\" component={Lol} />\n          <Route path=\"/game/:id\" component={GameStreams} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default Twitch;\n","import Twitch from \"./twitchApi/twitch\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Twitch />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}